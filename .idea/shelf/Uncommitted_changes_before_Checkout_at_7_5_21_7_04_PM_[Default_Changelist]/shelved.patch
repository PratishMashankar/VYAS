Index: app/src/main/java/com/pratishaad/homelibrarymanagement/AddBook.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.pratishaad.homelibrarymanagement;\n\nimport androidx.annotation.NonNull;\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.Manifest;\nimport android.app.DirectAction;\nimport android.content.ActivityNotFoundException;\nimport android.content.Intent;\nimport android.content.pm.PackageManager;\nimport android.graphics.Bitmap;\nimport android.net.Uri;\nimport android.os.Bundle;\nimport android.os.Environment;\nimport android.provider.MediaStore;\nimport android.text.TextUtils;\nimport android.util.Log;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.ImageView;\nimport android.widget.Spinner;\nimport android.widget.Toast;\n\nimport com.google.android.gms.tasks.OnFailureListener;\nimport com.google.android.gms.tasks.OnSuccessListener;\nimport com.google.android.gms.tasks.Task;\nimport com.google.firebase.auth.FirebaseAuth;\nimport com.google.firebase.database.DatabaseReference;\nimport com.google.firebase.database.FirebaseDatabase;\nimport com.google.firebase.storage.FirebaseStorage;\nimport com.google.firebase.storage.StorageReference;\nimport com.google.firebase.storage.UploadTask;\nimport com.google.mlkit.vision.common.InputImage;\nimport com.google.mlkit.vision.label.ImageLabel;\nimport com.google.mlkit.vision.label.ImageLabeler;\nimport com.google.mlkit.vision.label.ImageLabeling;\nimport com.google.mlkit.vision.label.defaults.ImageLabelerOptions;\nimport com.google.mlkit.vision.text.Text;\nimport com.google.mlkit.vision.text.TextRecognition;\nimport com.google.mlkit.vision.text.TextRecognizer;\n\nimport java.io.File;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.util.List;\n\npublic class AddBook extends AppCompatActivity {\n\n    EditText title,author,ifbn,desc;\n    ImageView coverimg,titleimg,authimg,ifbnimg,descimg;\n    Spinner genre;\n    Button addbook, addanotherbook, clearbtn;\n    final int REQUEST_IMAGE_CAPTURE = 1;\n    //DatabaseReference\n    DatabaseReference databaseBooks;\n    String userID;\n    Uri FilePathUri;\n\n    FirebaseAuth fAuth;\n\n    StorageReference storageRef;\n\n\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_add_book);\n\n        title=(EditText)findViewById(R.id.title);\n        author=(EditText)findViewById(R.id.author);\n        ifbn=(EditText)findViewById(R.id.ifbn);\n        desc=(EditText)findViewById(R.id.desc);\n\n        coverimg=(ImageView)findViewById(R.id.coverimg);\n        titleimg=(ImageView)findViewById(R.id.titleimg);\n        authimg=(ImageView)findViewById(R.id.authimg);\n        ifbnimg=(ImageView)findViewById(R.id.ifbnimg);\n        descimg=(ImageView)findViewById(R.id.descimg);\n\n        genre=(Spinner)findViewById(R.id.genre);\n\n        addbook=(Button)findViewById(R.id.addbook);\n        clearbtn=(Button)findViewById(R.id.clear);\n\n        coverimg.setImageResource(R.drawable.camera);\n        titleimg.setImageResource(R.drawable.camera);\n        authimg.setImageResource(R.drawable.camera);\n        ifbnimg.setImageResource(R.drawable.camera);\n        descimg.setImageResource(R.drawable.camera);\n\n        //authenticated user\n        fAuth = FirebaseAuth.getInstance();\n\n\n\n        //getting user ID under which books are to be added\n        databaseBooks= FirebaseDatabase.getInstance().getReference();\n\n        storageRef = FirebaseStorage.getInstance().getReference();\n\n\n\n        //check app level permission given for camera\n        if(checkSelfPermission(Manifest.permission.CAMERA)!= PackageManager.PERMISSION_GRANTED){\n            requestPermissions(new String[]{Manifest.permission.CAMERA},101);\n        }\n\n        //Clear Button\n        clearbtn.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                title.setText(\"\");\n                author.setText(\"\");\n                ifbn.setText(\"\");\n                desc.setText(\"\");\n                coverimg.setImageResource(R.drawable.camera);\n                titleimg.setImageResource(R.drawable.camera);\n                authimg.setImageResource(R.drawable.camera);\n                ifbnimg.setImageResource(R.drawable.camera);\n                descimg.setImageResource(R.drawable.camera);\n            }\n        });\n\n        //Add Book to Firebase Database\n        addbook.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                addBook();\n                //uid of book, add im,age to this uid\n            }\n        });\n    }\n\n\n    //IMAGE TO TEXT CODE\n    public void captureImage(View view){\n        Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\n        if((view.toString()).equals(findViewById(R.id.coverimg).toString())) startActivityForResult(intent, 105);\n        else if((view.toString()).equals(findViewById(R.id.titleimg).toString())) startActivityForResult(intent, 101);\n        else if((view.toString()).equals(findViewById(R.id.authimg).toString())) startActivityForResult(intent, 102);\n        else if((view.toString()).equals(findViewById(R.id.ifbnimg).toString())) startActivityForResult(intent, 103);\n        else if((view.toString()).equals(findViewById(R.id.descimg).toString())) startActivityForResult(intent, 104);\n    }\n    @Override\n    protected void onActivityResult(final int requestCode, int resultCode, Intent data) {\n        super.onActivityResult(requestCode, resultCode, data);\n        Bundle bundle = data.getExtras();\n        //extract image from bundle\n        Bitmap bitmap = (Bitmap) bundle.get(\"data\");\n        //set image to image view\n        if(requestCode==105) {\n            //FilePathUri =  data.getData(); //new added\n            String fpu=\"hello\";\n\n            File photofile = createImageFile();\n\n            Toast.makeText(getApplicationContext(),fpu,Toast.LENGTH_SHORT).show();\n            coverimg.setImageBitmap(bitmap);\n        }\n        else if(requestCode==101) titleimg.setImageBitmap(bitmap);\n        else if(requestCode==102) authimg.setImageBitmap(bitmap);\n        else if(requestCode==103) ifbnimg.setImageBitmap(bitmap);\n        else if(requestCode==104) descimg.setImageBitmap(bitmap);\n        //process the image to extract image\n        InputImage image = InputImage.fromBitmap(bitmap, 0);\n        TextRecognizer recognizer = TextRecognition.getClient();\n        Task<Text> result =\n                recognizer\n                        .process(image)\n                        .addOnSuccessListener(new OnSuccessListener<Text>() {\n                            @Override\n                            public void onSuccess(Text visionText) {\n                                //Toast.makeText(getApplicationContext(),visionText.getText(),Toast.LENGTH_SHORT).show();\n                                if(requestCode==101) title.setText(visionText.getText());\n                                else if(requestCode==102) author.setText(visionText.getText());\n                                else if(requestCode==103) ifbn.setText(visionText.getText());\n                                else if(requestCode==104) desc.setText(visionText.getText());\n\n                            }\n                        })\n                        .addOnFailureListener(\n                                new OnFailureListener() {\n                                    @Override\n                                    public void onFailure(@NonNull Exception e) {\n                                        Toast.makeText(getApplicationContext(),\"Error!\",Toast.LENGTH_SHORT).show();\n                                    }\n                                });\n    }\n\n    private File createImageFile() {\n        // Create an image file name\n        String timeStamp = new SimpleDateFormat(\"yyyyMMdd_HHmmss\").format(new Date());\n        String imageFileName = \"JPEG_\" + timeStamp + \"_\";\n        String storageDir = Environment.getExternalStorageDirectory() + \"/picupload\";\n        File dir = new File(storageDir);\n        if (!dir.exists())\n            dir.mkdir();\n\n        File image = new File(storageDir + \"/\" + imageFileName + \".jpg\");\n\n        // Save a file: path for use with ACTION_VIEW intents\n        String mCurrentPhotoPath = image.getAbsolutePath();\n        Log.e(\"photo path = \" , mCurrentPhotoPath);\n\n        return image;\n    }\n\n    //ADD BOOK TO FIREBASE\n    protected void addBook(){\n        String mTitle=title.getText().toString().trim();\n        String mAuthor=author.getText().toString().trim();\n        String mISBN=ifbn.getText().toString().trim();\n        String mDescription=desc.getText().toString().trim();\n        String mGenre=genre.getSelectedItem().toString();\n        String mImageFirebaseURI=\"TempUri\";\n\n        if(!(TextUtils.isEmpty(mTitle))){\n            //mImageFirebaseURI=uploadImageToFirebase(mTitle,FilePathUri);\n            String uid=fAuth.getUid();\n            String books=\"AllBooks\";\n            //databaseBooks.child(uid).push();\n            String bookID = databaseBooks.child(uid).push().getKey();\n            Book book = new Book(bookID,mTitle,mAuthor,mISBN,mDescription,mGenre,mImageFirebaseURI);\n            databaseBooks.child(uid).child(books).child(bookID).setValue(book);\n            Toast.makeText(getApplicationContext(),\"This Book has been added \",Toast.LENGTH_SHORT).show();\n        }else{\n            Toast.makeText(getApplicationContext(),\"Book Failed to ADD\",Toast.LENGTH_SHORT).show();\n        }\n    }\n\n    private String uploadImageToFirebase(String mTitle, Uri filePathUri) {\n        final String[] mImageFirebaseURI = {\"\"};\n        final StorageReference mImgRef = storageRef.child(\"images/\"+mTitle);\n        mImgRef.putFile(filePathUri).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\n            @Override\n            public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {\n                Toast.makeText(getApplicationContext(),\"Image successfully uploaded\",Toast.LENGTH_SHORT).show();\n                mImageFirebaseURI[0] = mImgRef.getDownloadUrl().toString();\n            }\n        });\n        return mImageFirebaseURI[0];\n    }\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/pratishaad/homelibrarymanagement/AddBook.java	(revision a6296cbe619beee49f98170a8dd92646b2582962)
+++ app/src/main/java/com/pratishaad/homelibrarymanagement/AddBook.java	(date 1620394442000)
@@ -47,8 +47,8 @@
 
 public class AddBook extends AppCompatActivity {
 
-    EditText title,author,ifbn,desc;
-    ImageView coverimg,titleimg,authimg,ifbnimg,descimg;
+    EditText title, author, ifbn, desc;
+    ImageView coverimg, titleimg, authimg, ifbnimg, descimg;
     Spinner genre;
     Button addbook, addanotherbook, clearbtn;
     final int REQUEST_IMAGE_CAPTURE = 1;
@@ -62,27 +62,26 @@
     StorageReference storageRef;
 
 
-
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_add_book);
 
-        title=(EditText)findViewById(R.id.title);
-        author=(EditText)findViewById(R.id.author);
-        ifbn=(EditText)findViewById(R.id.ifbn);
-        desc=(EditText)findViewById(R.id.desc);
+        title = (EditText) findViewById(R.id.title);
+        author = (EditText) findViewById(R.id.author);
+        ifbn = (EditText) findViewById(R.id.ifbn);
+        desc = (EditText) findViewById(R.id.desc);
 
-        coverimg=(ImageView)findViewById(R.id.coverimg);
-        titleimg=(ImageView)findViewById(R.id.titleimg);
-        authimg=(ImageView)findViewById(R.id.authimg);
-        ifbnimg=(ImageView)findViewById(R.id.ifbnimg);
-        descimg=(ImageView)findViewById(R.id.descimg);
+        coverimg = (ImageView) findViewById(R.id.coverimg);
+        titleimg = (ImageView) findViewById(R.id.titleimg);
+        authimg = (ImageView) findViewById(R.id.authimg);
+        ifbnimg = (ImageView) findViewById(R.id.ifbnimg);
+        descimg = (ImageView) findViewById(R.id.descimg);
 
-        genre=(Spinner)findViewById(R.id.genre);
+        genre = (Spinner) findViewById(R.id.genre);
 
-        addbook=(Button)findViewById(R.id.addbook);
-        clearbtn=(Button)findViewById(R.id.clear);
+        addbook = (Button) findViewById(R.id.addbook);
+        clearbtn = (Button) findViewById(R.id.clear);
 
         coverimg.setImageResource(R.drawable.camera);
         titleimg.setImageResource(R.drawable.camera);
@@ -94,17 +93,15 @@
         fAuth = FirebaseAuth.getInstance();
 
 
-
         //getting user ID under which books are to be added
-        databaseBooks= FirebaseDatabase.getInstance().getReference();
+        databaseBooks = FirebaseDatabase.getInstance().getReference();
 
         storageRef = FirebaseStorage.getInstance().getReference();
 
 
-
         //check app level permission given for camera
-        if(checkSelfPermission(Manifest.permission.CAMERA)!= PackageManager.PERMISSION_GRANTED){
-            requestPermissions(new String[]{Manifest.permission.CAMERA},101);
+        if (checkSelfPermission(Manifest.permission.CAMERA) != PackageManager.PERMISSION_GRANTED) {
+            requestPermissions(new String[]{Manifest.permission.CAMERA}, 101);
         }
 
         //Clear Button
@@ -135,14 +132,20 @@
 
 
     //IMAGE TO TEXT CODE
-    public void captureImage(View view){
+    public void captureImage(View view) {
         Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
-        if((view.toString()).equals(findViewById(R.id.coverimg).toString())) startActivityForResult(intent, 105);
-        else if((view.toString()).equals(findViewById(R.id.titleimg).toString())) startActivityForResult(intent, 101);
-        else if((view.toString()).equals(findViewById(R.id.authimg).toString())) startActivityForResult(intent, 102);
-        else if((view.toString()).equals(findViewById(R.id.ifbnimg).toString())) startActivityForResult(intent, 103);
-        else if((view.toString()).equals(findViewById(R.id.descimg).toString())) startActivityForResult(intent, 104);
+        if ((view.toString()).equals(findViewById(R.id.coverimg).toString()))
+            startActivityForResult(intent, 105);
+        else if ((view.toString()).equals(findViewById(R.id.titleimg).toString()))
+            startActivityForResult(intent, 101);
+        else if ((view.toString()).equals(findViewById(R.id.authimg).toString()))
+            startActivityForResult(intent, 102);
+        else if ((view.toString()).equals(findViewById(R.id.ifbnimg).toString()))
+            startActivityForResult(intent, 103);
+        else if ((view.toString()).equals(findViewById(R.id.descimg).toString()))
+            startActivityForResult(intent, 104);
     }
+
     @Override
     protected void onActivityResult(final int requestCode, int resultCode, Intent data) {
         super.onActivityResult(requestCode, resultCode, data);
@@ -150,19 +153,18 @@
         //extract image from bundle
         Bitmap bitmap = (Bitmap) bundle.get("data");
         //set image to image view
-        if(requestCode==105) {
+        if (requestCode == 105) {
             //FilePathUri =  data.getData(); //new added
-            String fpu="hello";
+            String fpu = "hello";
 
             File photofile = createImageFile();
 
-            Toast.makeText(getApplicationContext(),fpu,Toast.LENGTH_SHORT).show();
+            Toast.makeText(getApplicationContext(), fpu, Toast.LENGTH_SHORT).show();
             coverimg.setImageBitmap(bitmap);
-        }
-        else if(requestCode==101) titleimg.setImageBitmap(bitmap);
-        else if(requestCode==102) authimg.setImageBitmap(bitmap);
-        else if(requestCode==103) ifbnimg.setImageBitmap(bitmap);
-        else if(requestCode==104) descimg.setImageBitmap(bitmap);
+        } else if (requestCode == 101) titleimg.setImageBitmap(bitmap);
+        else if (requestCode == 102) authimg.setImageBitmap(bitmap);
+        else if (requestCode == 103) ifbnimg.setImageBitmap(bitmap);
+        else if (requestCode == 104) descimg.setImageBitmap(bitmap);
         //process the image to extract image
         InputImage image = InputImage.fromBitmap(bitmap, 0);
         TextRecognizer recognizer = TextRecognition.getClient();
@@ -173,10 +175,10 @@
                             @Override
                             public void onSuccess(Text visionText) {
                                 //Toast.makeText(getApplicationContext(),visionText.getText(),Toast.LENGTH_SHORT).show();
-                                if(requestCode==101) title.setText(visionText.getText());
-                                else if(requestCode==102) author.setText(visionText.getText());
-                                else if(requestCode==103) ifbn.setText(visionText.getText());
-                                else if(requestCode==104) desc.setText(visionText.getText());
+                                if (requestCode == 101) title.setText(visionText.getText());
+                                else if (requestCode == 102) author.setText(visionText.getText());
+                                else if (requestCode == 103) ifbn.setText(visionText.getText());
+                                else if (requestCode == 104) desc.setText(visionText.getText());
 
                             }
                         })
@@ -184,7 +186,7 @@
                                 new OnFailureListener() {
                                     @Override
                                     public void onFailure(@NonNull Exception e) {
-                                        Toast.makeText(getApplicationContext(),"Error!",Toast.LENGTH_SHORT).show();
+                                        Toast.makeText(getApplicationContext(), "Error!", Toast.LENGTH_SHORT).show();
                                     }
                                 });
     }
@@ -202,46 +204,45 @@
 
         // Save a file: path for use with ACTION_VIEW intents
         String mCurrentPhotoPath = image.getAbsolutePath();
-        Log.e("photo path = " , mCurrentPhotoPath);
+        Log.e("photo path = ", mCurrentPhotoPath);
 
         return image;
     }
 
     //ADD BOOK TO FIREBASE
-    protected void addBook(){
-        String mTitle=title.getText().toString().trim();
-        String mAuthor=author.getText().toString().trim();
-        String mISBN=ifbn.getText().toString().trim();
-        String mDescription=desc.getText().toString().trim();
-        String mGenre=genre.getSelectedItem().toString();
-        String mImageFirebaseURI="TempUri";
+    protected void addBook() {
+        String mTitle = title.getText().toString().trim();
+        String mAuthor = author.getText().toString().trim();
+        String mISBN = ifbn.getText().toString().trim();
+        String mDescription = desc.getText().toString().trim();
+        String mGenre = genre.getSelectedItem().toString();
+        String mImageFirebaseURI = "TempUri";
 
-        if(!(TextUtils.isEmpty(mTitle))){
+        if (!(TextUtils.isEmpty(mTitle))) {
             //mImageFirebaseURI=uploadImageToFirebase(mTitle,FilePathUri);
-            String uid=fAuth.getUid();
-            String books="AllBooks";
+            String uid = fAuth.getUid();
+            String books = "AllBooks";
             //databaseBooks.child(uid).push();
             String bookID = databaseBooks.child(uid).push().getKey();
-            Book book = new Book(bookID,mTitle,mAuthor,mISBN,mDescription,mGenre,mImageFirebaseURI);
+            Book book = new Book(bookID, mTitle, mAuthor, mISBN, mDescription, mGenre, mImageFirebaseURI);
             databaseBooks.child(uid).child(books).child(bookID).setValue(book);
-            Toast.makeText(getApplicationContext(),"This Book has been added ",Toast.LENGTH_SHORT).show();
-        }else{
-            Toast.makeText(getApplicationContext(),"Book Failed to ADD",Toast.LENGTH_SHORT).show();
+            Toast.makeText(getApplicationContext(), "This Book has been added ", Toast.LENGTH_SHORT).show();
+        } else {
+            Toast.makeText(getApplicationContext(), "Book Failed to ADD", Toast.LENGTH_SHORT).show();
         }
     }
 
     private String uploadImageToFirebase(String mTitle, Uri filePathUri) {
         final String[] mImageFirebaseURI = {""};
-        final StorageReference mImgRef = storageRef.child("images/"+mTitle);
+        final StorageReference mImgRef = storageRef.child("images/" + mTitle);
         mImgRef.putFile(filePathUri).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {
             @Override
             public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {
-                Toast.makeText(getApplicationContext(),"Image successfully uploaded",Toast.LENGTH_SHORT).show();
+                Toast.makeText(getApplicationContext(), "Image successfully uploaded", Toast.LENGTH_SHORT).show();
                 mImageFirebaseURI[0] = mImgRef.getDownloadUrl().toString();
             }
         });
         return mImageFirebaseURI[0];
     }
 
-
 }
\ No newline at end of file
